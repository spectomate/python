stages:
  - test
  - build
  - deploy

variables:
  DOCKER_IMAGE: spectomate/python
  DOCKER_TAG: $CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://docker:2375

# Test stage
test:
  stage: test
  image: python:3.9-slim
  script:
    - cd python
    - pip install -r requirements.txt
    - pip install pytest pytest-cov
    - pytest --cov=spectomate tests/
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml

# Build Docker image
build:
  stage: build
  image: docker:20.10.16
  services:
    - docker:20.10.16-dind
  script:
    - cd python
    - docker build -t $DOCKER_IMAGE:$DOCKER_TAG -t $DOCKER_IMAGE:latest -f web/Dockerfile .
    - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
    - docker push $DOCKER_IMAGE:$DOCKER_TAG
    - docker push $DOCKER_IMAGE:latest
  only:
    - main
    - tags

# Deploy to VPS
deploy:
  stage: deploy
  image: alpine:latest
  before_script:
    - apk add --no-cache openssh-client
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
    - chmod 644 ~/.ssh/known_hosts
  script:
    - ssh $VPS_USER@$VPS_HOST "cd /opt/spectomate && docker-compose pull && docker-compose up -d"
  environment:
    name: production
    url: https://python.spectomate.com
  only:
    - main
    - tags
